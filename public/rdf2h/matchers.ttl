@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix r2h: <http://rdf2h.github.io/2015/rdf2h#> .
@prefix lodide: <http://ontology.lodide.io/> .
@prefix dc: <http://dublincore.org/2012/06/14/dcelements#>.

[ a r2h:Matcher ;
        r2h:triplePattern [
        r2h:subject r2h:this;
        r2h:predicate lodide:intro;
    ];
    r2h:template [
        r2h:context r2h:Default;
        r2h:mustache '''<span id="intro">{{{lodide:intro}}}</span><br/>
                        {{{:render lodide:dataSource}}}<br>
                        {{{:render lodide:dataProcessing}}}<br>
                        {{{:render lodide:dataRendering}}}<br>
                        <div class="exercise" id="finalWords">{{{lodide:finalWords}}}</div>
                        <button id="run" type="button" class="btn btn-primary pull-right">Run my code</button>
                        <button id="saveButton" type="button" class="btn btn-default pull-right authenticatedOnly">Save my code</button>
                        <div id="result"></div>
                     '''
    ]
].
[ a r2h:Matcher ;
        r2h:triplePattern [
        r2h:predicate lodide:dataSource;
        r2h:object r2h:this;
    ];
    r2h:template [
        r2h:mustache '''<h2>Data source</h2>

            {{#+lodide:taskDescription}}
            <div class="exercise">
                <span id="dataSource-taskDescription">{{{lodide:taskDescription}}}</span>
                {{#lodide:taskSolutionType}}
                <button class="source-solution-button btn btn-info">Show solution</button>
                <textarea id="sourceType-solution" style="display: none">{{{.}}}</textarea>
                {{/lodide:taskSolutionType}}
                {{#lodide:taskSolutionResource}}
                <div style="display: none" id="sourceURI-solution">{{.}}</div>
                {{/lodide:taskSolutionResource}}
                {{#lodide:taskSolutionCode}}
                <textarea id="sourceEditor-solution" style="display: none">{{.}}</textarea>
                {{/lodide:taskSolutionCode}}
            </div>
            {{/+lodide:taskDescription}}
            <div id="addRdfSource">
                <label for="selRdfSource">RDF Source:</label>
                <select class="form-control" id="selRdfSource">
                    <option value="uri">URI pointing to RDF</option>
                    <option value="directInput">Direct RDF Input</option>
                    <option value="sparql">SPARQL endpoint</option>
                </select>
                <button type="button" id="setRdfSource" class="btn btn-success">Set</button>
            </div>
            <div style="display: none" id="rdfSource-uri" class="dataSource">
                Specify the URL from which to retrieve the RDF data:
                <input id="sourceURI" type="text" size="80" value="{{{lodide:taskSolutionResourceCurrent}}}" />
            </div>

            <div style="display: none" id="rdfSource-directInput" class="dataSource">
                Enter the RDF data:
                <div id="rdfDataEditor" class="editor"></div>
            </div>

            <div style="display: none" id="rdfSource-sparql" class="dataSource">
                Specify the SPARQL endpoint URL:
                <input id="endpointURL" type="text" size="80" value="{{{lodide:taskSolutionResourceCurrent}}}" />
                <br/>
                Write your SPARQL query:<br/>
                <div id="sparqlEditor" class="editor">
                <div class="CodeMirror cm-s-default">
                <textarea id="queryForEndpoint" style="position: absolute; padding: 0px; width: 100%; height: 100%; outline: medium none;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off">{{{lodide:taskSolutionCodeCurrent}}}</textarea>
                </div></div>
            </div>
            <script>
            function setRdfSourceType(type) {
                $('.dataSource').hide();
                $('#rdfSource-'+type).show();
                $("#selRdfSource").val(type);
                $('#setRdfSource').html('change');
            }
            {{#lodide:taskSolutionResourceCurrent}}
                setRdfSourceType("uri");
            {{/lodide:taskSolutionResourceCurrent}}
            $('#setRdfSource').on('click', function(e) {
                setRdfSourceType($("#selRdfSource").val())

            });
            \u003C/script>

            <script>
                var rdfDataEditorValue = `{{{lodide:taskSolutionCodeCurrent}}}`;
                $("#rdfDataEditor").html("");
                var rdfDataEditorCM = CodeMirror($("#rdfDataEditor")[0], {
                    mode: "turtle"
                });
                if (rdfDataEditorValue) {
                    rdfDataEditorCM.setValue(rdfDataEditorValue);
                }

                var sparqlEditorValue = `{{{lodide:taskSolutionCodeCurrent}}}`;
                $("#sparqlEditor").html("");
                var sparqlEditorCM = CodeMirror($("#sparqlEditor")[0], {
                    mode: "turtle" //it works also for SPARQL
                });
                if (sparqlEditorValue) {
                    sparqlEditorCM.setValue(sparqlEditorValue);
                }
            \u003C/script>
             '''
    ]
].
[ a r2h:Matcher ;
        r2h:triplePattern [
        r2h:predicate lodide:dataProcessing;
        r2h:object r2h:this;
    ];
    r2h:template [
        r2h:mustache '''<h2>Data Processing</h2>
            {{#+lodide:taskDescription}}
            <div class="exercise">
                <span id="dataProcessing-taskDescription">{{{lodide:taskDescription}}}</span>
                {{#lodide:taskSolutionCode}}
                <button id="codeEditor-solution-button">Show solution</button>
                {{/lodide:taskSolutionCode}}
            </div>
            {{/+lodide:taskDescription}}
            <div>
                Act on the data available as graph object <code>g</code> or using the JSON object <code>j</code> if you ran a SPARQL SELECT query;
            </div>
            <div id="codeEditor" class="editor">{{lodide:taskSolutionCodeCurrent}}</div>
            <textarea style="display: none" id="codeEditor-solution">{{lodide:taskSolutionCode}}</textarea>'''
    ]
].

[ a r2h:Matcher ;
        r2h:triplePattern [
        r2h:predicate lodide:dataRendering;
        r2h:object r2h:this;
    ];
    r2h:template [
        r2h:mustache '''<h2 id="dataRenderingTitle">Data Rendering</h2>
            {{#+lodide:taskDescription}}
            <div class="exercise">
                <span id="dataRendering-taskDescription">{{{lodide:taskDescription}}}</span>
                {{#lodide:taskSolutionResource}}
                <button id="rendering-solution-button">Show solution</button>
                {{/lodide:taskSolutionResource}}
            </div>
            {{/+lodide:taskDescription}}
            <div>Render a resource using RDF2h matchers.</div>
            <div>Resource: <input id="rendering-resource" type="text" size="80" value="{{{lodide:taskSolutionResourceCurrent}}}" /></div>
            <div>RDF2h matchers:</div>
            <div id="matchersEditor" class="editor">{{lodide:taskSolutionCodeCurrent}}</div>
            <div style="display: none" id="rendering-resource-solution">{{lodide:taskSolutionResource}}</div>
            <textarea style="display: none" id="matchersEditor-solution">{{lodide:taskSolutionCode}}</textarea>'''
    ]
].


[ a r2h:Matcher ;
    r2h:triplePattern [
      r2h:subject r2h:this;
      r2h:predicate rdf:type;
      r2h:object lodide:Index;
    ];
    r2h:template [
      r2h:context r2h:Default;
      r2h:mustache """<h1>LodIde</h1>
        <div>You can start <a href="./">LodIDE</a> with various exercises/examples.

            The following exercises are ordered by their level of difficulty. While 
            the first exercises only introduce some RDF concepts, later exercise
            also require writing some JavaScript code. While the specifics are
            introduced in the description of the exercise, for those exercises
            you should have at least basic knowledge of the JavaScript syntax.
            There are several online resources to get started with JavaScript 
            such as <a href="https://www.learn-js.org/">learn-js.org</a>.
            To read about RDF concepts we recommend the resources provided by the 
            <a href="http://www.euclid-project.eu/">EUCLID Project</a>.

            <ul>
                {{{:render lodide:elements lodide:index}}}
            </ul>"""
    ]
].
[ a r2h:Matcher ;
    r2h:triplePattern [
      r2h:subject r2h:this;
      r2h:predicate rdf:type;
      r2h:object lodide:Exercise;
    ];
    r2h:template [
      r2h:context lodide:index;
      r2h:mustache "{{{lodide:intro}}}"
    ]
].
[ a r2h:Matcher ;
    r2h:triplePattern [
      r2h:subject r2h:this;
      r2h:predicate rdf:rest;
      r2h:object rdf:nil
    ];
    r2h:template [
      r2h:context lodide:index;
      r2h:mustache '''
  <li class="exercise-index">{{{:render rdf:first}}}</li>
      '''
    ]
] r2h:before [
    a r2h:Matcher ;
        r2h:triplePattern [
          r2h:subject r2h:this;
          r2h:predicate rdf:first
        ];
        r2h:template [
          r2h:context lodide:index;
          r2h:mustache '''
      <li class="exercise-index">{{{:render rdf:first}}}</li>
      {{{:render rdf:rest}}}
          '''
        ]
].
[ a r2h:Matcher ;
    r2h:triplePattern [
      r2h:subject r2h:this;
      r2h:predicate lodide:exercise;
    ];
    r2h:template [
      r2h:context lodide:index;
      r2h:mustache """
            {{{schema:description}}}:
            <div class="fetch" resource="{{{lodide:exercise}}}" context="http://ontology.lodide.io/index">More info about exercise will show up here</div>
            <a href='./?exercise={{{lodide:exercise}}}'>go play</a>
      """
    ]
].
